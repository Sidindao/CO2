image: node:20

stages: # List of stages for jobs, and their order of execution
  - test
  - build
  - build-dev
  - deploy
  - deploy-dev
  - sonarqube-check
  - sonarqube-vulnerability-report

cache:
  paths:
    - FRONTEND/node_modules/

before_script:
  - cd FRONTEND  
  - npm install  

install:
  stage: install
  script:
    - npm install 
  only:
    - main
    - developpement
    - test

lint:
  stage: lint
  script:
    - npm run lint 
  only:
    - test

test:
  stage: test
  script:
    - cd FRONTEND
    - npm run lint
    - npm run test
    - cd ..
  artifacts:
    when: always
    reports:
      junit: junit.xml
    paths:
      - FRONTEND/coverage/  
  only:
    - test

build:
  stage: build
  script:
    - npm run build 
  artifacts:
    paths:
      - FRONTEND/dist/  
  only:
    - main


build-dev:
  stage: build-dev
  only:
    - develop
  script:
    - cd FRONTEND
    - mv $DEV_CONF_FILE vite.config.js
    - npm run build
    - cd ..
  artifacts:
    paths:
      - FRONTEND/dist/

deploy:
  stage: deploy
  only:
    - main
  script:
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf ./api"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf ./env"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf /usr/share/nginx/html/main/*"

    - scp -i $SSH_PRIVATE_KEY -r ./api gitlabci@192.168.75.41:/home/gitlabci/api
    - scp -i $SSH_PRIVATE_KEY -r FRONTEND/dist/* gitlabci@192.168.75.41:/usr/share/nginx/html/main/

    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "python3 -m venv ./env"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "./env/bin/python -m pip install -r ./api/requirements.txt"
    - scp -i $SSH_PRIVATE_KEY $DB_PY_CONFIG gitlabci@192.168.75.41:/home/gitlabci/api/config.py

    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "sudo systemctl restart api_co2.service"

deploy-dev:
  stage: deploy-dev
  only:
    - develop
  script:
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf ./dev/api"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf ./dev/env"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "rm -rf /usr/share/nginx/html/dev/*"

    - scp -i $SSH_PRIVATE_KEY -r ./api gitlabci@192.168.75.41:/home/gitlabci/dev/api
    - scp -i $SSH_PRIVATE_KEY -r FRONTEND/dist/* gitlabci@192.168.75.41:/usr/share/nginx/html/dev/

    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "python3 -m venv ./dev/env"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "./dev/env/bin/python -m pip install -r ./dev/api/requirements.txt"
    - scp -i $SSH_PRIVATE_KEY $DB_PY_CONFIG gitlabci@192.168.75.41:/home/gitlabci/dev/api/config.py

    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "sudo systemctl restart api_co2_dev.service"
    - ssh -i $SSH_PRIVATE_KEY gitlabci@192.168.75.41 "sed -i '/<head>/a \    <base href="/dev/">' /usr/share/nginx/html/dev/index.html"
  
#sonar cube config

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=multimif&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

deployFront:
  stage: deploy
  script:
    - mkdir -p ~/.ssh  
    - echo "$CLE_PEM" > ~/.ssh/cle.pem  
    - echo "$GITLABCI_PEM" > ~/.ssh/gitlabci.pem  
    - chmod 600 ~/.ssh/cle.pem 
    - chmod 600 ~/.ssh/gitlabci.pem  
    - ssh -i ~/.ssh/cle.pem -o StrictHostKeyChecking=no p2413812@192.168.75.41 "mkdir -p /var/www/html"  
    - scp -i ~/.ssh/gitlabci.pem -o StrictHostKeyChecking=no -r FRONTEND/dist/* p2413812@192.168.75.41:/var/www/html  
    - ssh -i ~/.ssh/cle.pem -o StrictHostKeyChecking=no p2413812@192.168.75.41 "sudo systemctl restart nginx"  
  only:
    - main
